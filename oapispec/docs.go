// Package oapispec Code generated by swaggo/swag. DO NOT EDIT
package oapispec

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://nbrglm.com/auth-platform/terms",
        "contact": {
            "name": "NBRGLM Support",
            "url": "https://nbrglm.com/support",
            "email": "contact@nbrglm.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/signup": {
            "post": {
                "description": "Handles user registration requests via API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Signup API",
                "parameters": [
                    {
                        "description": "User Signup Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.UserSignupData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Signup Result",
                        "schema": {
                            "$ref": "#/definitions/auth.UserSignupResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.UserSignupData": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "inviteToken": {
                    "description": "Optional invite token for signup",
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "auth.UserSignupResult": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is an error code that can be used for programmatic handling of errors.",
                    "type": "integer"
                },
                "debug": {
                    "description": "DebugMessage is a technical message that can be used for debugging.",
                    "type": "string"
                },
                "message": {
                    "description": "Message is a user-friendly message that can be displayed to the end user.",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "CSRFTokenCookieAuth": {
            "type": "apiKey",
            "name": "nap_csrf_tk",
            "in": "cookie"
        },
        "CSRFTokenHeaderAuth": {
            "type": "apiKey",
            "name": "X-CSRF-Token",
            "in": "header"
        },
        "RefreshCookieAuth": {
            "type": "apiKey",
            "name": "nap_refresh_tk",
            "in": "cookie"
        },
        "RefreshHeaderAuth": {
            "type": "apiKey",
            "name": "X-NAP-Refresh-Token",
            "in": "header"
        },
        "SessionCookieAuth": {
            "type": "apiKey",
            "name": "nap_session_tk",
            "in": "cookie"
        },
        "SessionHeaderAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "NBRGLM Auth Platform Documentation",
        "url": "https://nbrglm.com/auth-platform/docs"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "NBRGLM Auth Platform",
	Description:      "This is the NBRGLM Auth Platform API documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
