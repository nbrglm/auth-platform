/*
NBRGLM Auth Platform

This is the NBRGLM Auth Platform API documentation.

API version: 0.0.1
Contact: contact@nbrglm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth_platform_go_sdk

import (
	"encoding/json"
)

// checks if the HandlersRefreshTokenResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlersRefreshTokenResult{}

// HandlersRefreshTokenResult struct for HandlersRefreshTokenResult
type HandlersRefreshTokenResult struct {
	Tokens *TokensTokens `json:"tokens,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HandlersRefreshTokenResult HandlersRefreshTokenResult

// NewHandlersRefreshTokenResult instantiates a new HandlersRefreshTokenResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlersRefreshTokenResult() *HandlersRefreshTokenResult {
	this := HandlersRefreshTokenResult{}
	return &this
}

// NewHandlersRefreshTokenResultWithDefaults instantiates a new HandlersRefreshTokenResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlersRefreshTokenResultWithDefaults() *HandlersRefreshTokenResult {
	this := HandlersRefreshTokenResult{}
	return &this
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *HandlersRefreshTokenResult) GetTokens() TokensTokens {
	if o == nil || IsNil(o.Tokens) {
		var ret TokensTokens
		return ret
	}
	return *o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersRefreshTokenResult) GetTokensOk() (*TokensTokens, bool) {
	if o == nil || IsNil(o.Tokens) {
		return nil, false
	}
	return o.Tokens, true
}

// HasTokens returns a boolean if a field has been set.
func (o *HandlersRefreshTokenResult) HasTokens() bool {
	if o != nil && !IsNil(o.Tokens) {
		return true
	}

	return false
}

// SetTokens gets a reference to the given TokensTokens and assigns it to the Tokens field.
func (o *HandlersRefreshTokenResult) SetTokens(v TokensTokens) {
	o.Tokens = &v
}

func (o HandlersRefreshTokenResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlersRefreshTokenResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tokens) {
		toSerialize["tokens"] = o.Tokens
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HandlersRefreshTokenResult) UnmarshalJSON(data []byte) (err error) {
	varHandlersRefreshTokenResult := _HandlersRefreshTokenResult{}

	err = json.Unmarshal(data, &varHandlersRefreshTokenResult)

	if err != nil {
		return err
	}

	*o = HandlersRefreshTokenResult(varHandlersRefreshTokenResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tokens")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHandlersRefreshTokenResult struct {
	value *HandlersRefreshTokenResult
	isSet bool
}

func (v NullableHandlersRefreshTokenResult) Get() *HandlersRefreshTokenResult {
	return v.value
}

func (v *NullableHandlersRefreshTokenResult) Set(val *HandlersRefreshTokenResult) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlersRefreshTokenResult) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlersRefreshTokenResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlersRefreshTokenResult(val *HandlersRefreshTokenResult) *NullableHandlersRefreshTokenResult {
	return &NullableHandlersRefreshTokenResult{value: val, isSet: true}
}

func (v NullableHandlersRefreshTokenResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlersRefreshTokenResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


