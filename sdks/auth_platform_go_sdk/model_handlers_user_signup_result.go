/*
NBRGLM Auth Platform

This is the NBRGLM Auth Platform API documentation.

API version: 0.0.1
Contact: contact@nbrglm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth_platform_go_sdk

import (
	"encoding/json"
)

// checks if the HandlersUserSignupResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlersUserSignupResult{}

// HandlersUserSignupResult struct for HandlersUserSignupResult
type HandlersUserSignupResult struct {
	Message *string `json:"message,omitempty"`
	UserId *string `json:"userId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HandlersUserSignupResult HandlersUserSignupResult

// NewHandlersUserSignupResult instantiates a new HandlersUserSignupResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlersUserSignupResult() *HandlersUserSignupResult {
	this := HandlersUserSignupResult{}
	return &this
}

// NewHandlersUserSignupResultWithDefaults instantiates a new HandlersUserSignupResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlersUserSignupResultWithDefaults() *HandlersUserSignupResult {
	this := HandlersUserSignupResult{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *HandlersUserSignupResult) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersUserSignupResult) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *HandlersUserSignupResult) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *HandlersUserSignupResult) SetMessage(v string) {
	o.Message = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *HandlersUserSignupResult) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersUserSignupResult) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *HandlersUserSignupResult) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *HandlersUserSignupResult) SetUserId(v string) {
	o.UserId = &v
}

func (o HandlersUserSignupResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlersUserSignupResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HandlersUserSignupResult) UnmarshalJSON(data []byte) (err error) {
	varHandlersUserSignupResult := _HandlersUserSignupResult{}

	err = json.Unmarshal(data, &varHandlersUserSignupResult)

	if err != nil {
		return err
	}

	*o = HandlersUserSignupResult(varHandlersUserSignupResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		delete(additionalProperties, "userId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHandlersUserSignupResult struct {
	value *HandlersUserSignupResult
	isSet bool
}

func (v NullableHandlersUserSignupResult) Get() *HandlersUserSignupResult {
	return v.value
}

func (v *NullableHandlersUserSignupResult) Set(val *HandlersUserSignupResult) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlersUserSignupResult) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlersUserSignupResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlersUserSignupResult(val *HandlersUserSignupResult) *NullableHandlersUserSignupResult {
	return &NullableHandlersUserSignupResult{value: val, isSet: true}
}

func (v NullableHandlersUserSignupResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlersUserSignupResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


