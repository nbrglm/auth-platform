/*
NBRGLM Auth Platform

This is the NBRGLM Auth Platform API documentation.

API version: 0.0.1
Contact: contact@nbrglm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth_platform_go_sdk

import (
	"encoding/json"
)

// checks if the HandlersSendVerificationEmailResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HandlersSendVerificationEmailResult{}

// HandlersSendVerificationEmailResult struct for HandlersSendVerificationEmailResult
type HandlersSendVerificationEmailResult struct {
	Message *string `json:"message,omitempty"`
	Success *bool `json:"success,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _HandlersSendVerificationEmailResult HandlersSendVerificationEmailResult

// NewHandlersSendVerificationEmailResult instantiates a new HandlersSendVerificationEmailResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHandlersSendVerificationEmailResult() *HandlersSendVerificationEmailResult {
	this := HandlersSendVerificationEmailResult{}
	return &this
}

// NewHandlersSendVerificationEmailResultWithDefaults instantiates a new HandlersSendVerificationEmailResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHandlersSendVerificationEmailResultWithDefaults() *HandlersSendVerificationEmailResult {
	this := HandlersSendVerificationEmailResult{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *HandlersSendVerificationEmailResult) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersSendVerificationEmailResult) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *HandlersSendVerificationEmailResult) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *HandlersSendVerificationEmailResult) SetMessage(v string) {
	o.Message = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *HandlersSendVerificationEmailResult) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HandlersSendVerificationEmailResult) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *HandlersSendVerificationEmailResult) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *HandlersSendVerificationEmailResult) SetSuccess(v bool) {
	o.Success = &v
}

func (o HandlersSendVerificationEmailResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HandlersSendVerificationEmailResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HandlersSendVerificationEmailResult) UnmarshalJSON(data []byte) (err error) {
	varHandlersSendVerificationEmailResult := _HandlersSendVerificationEmailResult{}

	err = json.Unmarshal(data, &varHandlersSendVerificationEmailResult)

	if err != nil {
		return err
	}

	*o = HandlersSendVerificationEmailResult(varHandlersSendVerificationEmailResult)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "message")
		delete(additionalProperties, "success")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHandlersSendVerificationEmailResult struct {
	value *HandlersSendVerificationEmailResult
	isSet bool
}

func (v NullableHandlersSendVerificationEmailResult) Get() *HandlersSendVerificationEmailResult {
	return v.value
}

func (v *NullableHandlersSendVerificationEmailResult) Set(val *HandlersSendVerificationEmailResult) {
	v.value = val
	v.isSet = true
}

func (v NullableHandlersSendVerificationEmailResult) IsSet() bool {
	return v.isSet
}

func (v *NullableHandlersSendVerificationEmailResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHandlersSendVerificationEmailResult(val *HandlersSendVerificationEmailResult) *NullableHandlersSendVerificationEmailResult {
	return &NullableHandlersSendVerificationEmailResult{value: val, isSet: true}
}

func (v NullableHandlersSendVerificationEmailResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHandlersSendVerificationEmailResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


