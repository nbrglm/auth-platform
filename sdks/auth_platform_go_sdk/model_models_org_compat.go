/*
NBRGLM Auth Platform

This is the NBRGLM Auth Platform API documentation.

API version: 0.0.1
Contact: contact@nbrglm.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package auth_platform_go_sdk

import (
	"encoding/json"
)

// checks if the ModelsOrgCompat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsOrgCompat{}

// ModelsOrgCompat struct for ModelsOrgCompat
type ModelsOrgCompat struct {
	AvatarURL *string `json:"avatarURL,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	DeletedAt *string `json:"deletedAt,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Settings map[string]map[string]interface{} `json:"settings,omitempty"`
	Slug *string `json:"slug,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsOrgCompat ModelsOrgCompat

// NewModelsOrgCompat instantiates a new ModelsOrgCompat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsOrgCompat() *ModelsOrgCompat {
	this := ModelsOrgCompat{}
	return &this
}

// NewModelsOrgCompatWithDefaults instantiates a new ModelsOrgCompat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsOrgCompatWithDefaults() *ModelsOrgCompat {
	this := ModelsOrgCompat{}
	return &this
}

// GetAvatarURL returns the AvatarURL field value if set, zero value otherwise.
func (o *ModelsOrgCompat) GetAvatarURL() string {
	if o == nil || IsNil(o.AvatarURL) {
		var ret string
		return ret
	}
	return *o.AvatarURL
}

// GetAvatarURLOk returns a tuple with the AvatarURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrgCompat) GetAvatarURLOk() (*string, bool) {
	if o == nil || IsNil(o.AvatarURL) {
		return nil, false
	}
	return o.AvatarURL, true
}

// HasAvatarURL returns a boolean if a field has been set.
func (o *ModelsOrgCompat) HasAvatarURL() bool {
	if o != nil && !IsNil(o.AvatarURL) {
		return true
	}

	return false
}

// SetAvatarURL gets a reference to the given string and assigns it to the AvatarURL field.
func (o *ModelsOrgCompat) SetAvatarURL(v string) {
	o.AvatarURL = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsOrgCompat) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrgCompat) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsOrgCompat) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsOrgCompat) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *ModelsOrgCompat) GetDeletedAt() string {
	if o == nil || IsNil(o.DeletedAt) {
		var ret string
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrgCompat) GetDeletedAtOk() (*string, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *ModelsOrgCompat) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given string and assigns it to the DeletedAt field.
func (o *ModelsOrgCompat) SetDeletedAt(v string) {
	o.DeletedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsOrgCompat) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrgCompat) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsOrgCompat) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsOrgCompat) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsOrgCompat) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrgCompat) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsOrgCompat) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsOrgCompat) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsOrgCompat) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrgCompat) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsOrgCompat) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsOrgCompat) SetName(v string) {
	o.Name = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *ModelsOrgCompat) GetSettings() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Settings) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrgCompat) GetSettingsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Settings) {
		return map[string]map[string]interface{}{}, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *ModelsOrgCompat) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given map[string]map[string]interface{} and assigns it to the Settings field.
func (o *ModelsOrgCompat) SetSettings(v map[string]map[string]interface{}) {
	o.Settings = v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *ModelsOrgCompat) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrgCompat) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *ModelsOrgCompat) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *ModelsOrgCompat) SetSlug(v string) {
	o.Slug = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsOrgCompat) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrgCompat) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsOrgCompat) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsOrgCompat) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsOrgCompat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsOrgCompat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvatarURL) {
		toSerialize["avatarURL"] = o.AvatarURL
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsOrgCompat) UnmarshalJSON(data []byte) (err error) {
	varModelsOrgCompat := _ModelsOrgCompat{}

	err = json.Unmarshal(data, &varModelsOrgCompat)

	if err != nil {
		return err
	}

	*o = ModelsOrgCompat(varModelsOrgCompat)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "avatarURL")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "deletedAt")
		delete(additionalProperties, "description")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "settings")
		delete(additionalProperties, "slug")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsOrgCompat struct {
	value *ModelsOrgCompat
	isSet bool
}

func (v NullableModelsOrgCompat) Get() *ModelsOrgCompat {
	return v.value
}

func (v *NullableModelsOrgCompat) Set(val *ModelsOrgCompat) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsOrgCompat) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsOrgCompat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsOrgCompat(val *ModelsOrgCompat) *NullableModelsOrgCompat {
	return &NullableModelsOrgCompat{value: val, isSet: true}
}

func (v NullableModelsOrgCompat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsOrgCompat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


