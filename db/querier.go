// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddDomainToOrg(ctx context.Context, arg AddDomainToOrgParams) (OrgDomain, error)
	BanUserFromOrg(ctx context.Context, arg BanUserFromOrgParams) error
	CreateInvitation(ctx context.Context, arg CreateInvitationParams) (Invitation, error)
	CreateOrg(ctx context.Context, arg CreateOrgParams) (Org, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (CreateUserRow, error)
	DeleteSession(ctx context.Context, id uuid.UUID) error
	DeleteSessionByRefreshToken(ctx context.Context, refreshTokenHash string) error
	DeleteSessionByToken(ctx context.Context, tokenHash string) error
	GetInfoForSessionRefresh(ctx context.Context, arg GetInfoForSessionRefreshParams) (GetInfoForSessionRefreshRow, error)
	GetInvitationByID(ctx context.Context, id uuid.UUID) (Invitation, error)
	GetInvitationByIDUnsafe(ctx context.Context, id uuid.UUID) (Invitation, error)
	GetInvitationByToken(ctx context.Context, token string) (Invitation, error)
	GetInvitationByTokenUnsafe(ctx context.Context, token string) (Invitation, error)
	GetLoginInfoForUser(ctx context.Context, email string) (User, error)
	GetOrgByDomain(ctx context.Context, domain string) (Org, error)
	GetOrgByID(ctx context.Context, id uuid.UUID) (Org, error)
	GetOrgBySlug(ctx context.Context, slug string) (Org, error)
	GetOrgForDomainIfAutoJoin(ctx context.Context, domain string) (Org, error)
	GetSessionByID(ctx context.Context, id uuid.UUID) (Session, error)
	GetSessionByRefreshToken(ctx context.Context, refreshTokenHash string) (Session, error)
	GetSessionByToken(ctx context.Context, tokenHash string) (Session, error)
	GetSessionsByOrgID(ctx context.Context, orgID uuid.UUID) ([]Session, error)
	GetSessionsByUserID(ctx context.Context, userID uuid.UUID) ([]Session, error)
	GetSessionsByUserIDAndOrgID(ctx context.Context, arg GetSessionsByUserIDAndOrgIDParams) ([]Session, error)
	GetUserByEmail(ctx context.Context, email string) (GetUserByEmailRow, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (GetUserByIDRow, error)
	GetUserOrgsByEmail(ctx context.Context, email *string) ([]GetUserOrgsByEmailRow, error)
	GetUserOrgsByID(ctx context.Context, id *uuid.UUID) ([]GetUserOrgsByIDRow, error)
	GetVerificationTokenByHash(ctx context.Context, tokenHash []byte) (VerificationToken, error)
	LinkUserToOrg(ctx context.Context, arg LinkUserToOrgParams) error
	MarkUserEmailVerified(ctx context.Context, id uuid.UUID) error
	NewVerificationToken(ctx context.Context, arg NewVerificationTokenParams) (VerificationToken, error)
	RefreshSession(ctx context.Context, arg RefreshSessionParams) (Session, error)
	RemoveDomainFromOrg(ctx context.Context, arg RemoveDomainFromOrgParams) error
	RevokeInvitation(ctx context.Context, id uuid.UUID) error
	RevokeInvitationByEmail(ctx context.Context, arg RevokeInvitationByEmailParams) error
	RevokeInvitationByToken(ctx context.Context, token string) error
	SetUserBackupCodes(ctx context.Context, arg SetUserBackupCodesParams) error
	SoftDeleteOrg(ctx context.Context, id uuid.UUID) error
	SoftDeleteUser(ctx context.Context, email string) error
	UnlinkUserFromOrg(ctx context.Context, arg UnlinkUserFromOrgParams) error
	UpdateOrg(ctx context.Context, arg UpdateOrgParams) (Org, error)
	UpdateOrgWhereSlug(ctx context.Context, arg UpdateOrgWhereSlugParams) (Org, error)
	UpdateSessionMFA(ctx context.Context, arg UpdateSessionMFAParams) (Session, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (UpdateUserRow, error)
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	UpdateUserSessionAgentAndIP(ctx context.Context, arg UpdateUserSessionAgentAndIPParams) (Session, error)
}

var _ Querier = (*Queries)(nil)
