# Toggle debug mode, used for development of this auth platform.
# Although, you can set this true while developing your own application,
# it is not recommended to use this in production.
# A non-exhaustive list of the effects of debug mode:
# - CSRF is disabled.
# - CORS is configured differently.
# - Debug logs are enabled. (Noisy output)
debug: true

# List of admin users for the auth platform.
admins:
  - email: admin@example.com
    # Bcrypt password hash only
    passwordHash: $2a$10$eImiTMZG4Tn0y1N9O8e5uO3b6z5Z5j7f5Z5j7f5Z5j7f5Z5j7f5Z5j7

# Configure the multitenancy feature.
# This feature is not enabled by default.
# When enabled, it allows the auth platform to handle multiple tenants.
# Each tenant can have its own configuration, users, and settings.
# Note: This feature is experimental and may not be fully stable.
multitenancy:
  # Enable or disable multitenancy.
  enabled: false

# Configure notifications for the auth platform.
# Currently, only email notifications are supported.
notifications:
  # Configure email notifications.
  email:
    # The directory holding any custom email templates.
    # If provided, it should have ALL the required templates.
    # The default templates are used if this is not provided.
    # templatesDir: /path/to/custom/templates

    # The provider for email notifications. One of smtp, ses, or sendgrid.
    provider: smtp
    smtp:
      # SMTP server host.
      host: localhost
      # SMTP server port.
      port: 1025
      # From address for email notifications.
      fromAddress: no-reply@example.com
      # Password for the SMTP server.
      password: "abcd1234"

    # SES Provider configuration.
    # ses:
    #   region: us-east-1
    #   accessKeyID: YOUR_ACCESS_KEY_ID
    #   secretAccessKey: YOUR_SECRET_ACCESS_KEY
    #   fromAddress: no-reply@example.com
    #   fromName: No Reply

    # SendGrid Provider configuration.
    # sendgrid:
    #   apiKey: YOUR_SENDGRID_API_KEY
    #   fromAddress: no-reply@example.com
    #   fromName: No Reply

  # Configure SMS notifications. (Not implemented yet)
  # sms:
  #   The directory holding any custom SMS templates.
  #   If provided, it should have ALL the required templates.
  #   The default templates are used if this is not provided.
  #   templatesDir: /path/to/custom/sms/templates

# Configure public settings such as redirects, debug URLs, etc. for the auth platform.
public:
  # The domain at which the auth platform is hosted.
  # Eg. hosting at "auth.example.com", then this should be "example.com"
  domain: example.com

  # The scheme for public URLs (http/https).
  # Use https even if TLS termination is done at a reverse proxy.
  scheme: https

  # SubDomain at which NAP is being hosted.
  # Eg. hosting at "auth.example.com", then this should be "auth"
  subdomain: auth

  # DebugBaseURL is used for debugging purposes.
  # It is used when the auth platform is running in debug mode.
  # Thus, while developing your application, you can use this URL to access the auth platform and set the `debug` flag to true above.
  debugBaseURL: http://localhost:3360

  # Redirects for public URLs.
  redirects:
    # Domains is a list of domains which will be allowed to be specified in the returnTo query parameter.
    # If the returnTo parameter is not provided, or if the url provided doesn't match the domains specified here,
    # the auth platform will redirect to the unsafe-redirection page.
    #
    # Note: Using "*" WILL NOT work. In debug mode, localhost is automatically added.
    # The domain specified above (`domain` key) is always allowed.
    domains:
      - example.com

# Configure the server settings for the auth platform.
server:
  # The host on which the server will listen.
  host: "0.0.0.0"

  # The port on which the server will listen.
  port: 3360

  # The instance ID for the server.
  # This is used to identify the instance of the auth platform.
  # Useful in distributed setups like Kubernetes.
  instanceID: default-instance

  # The TLS configuration to enable TLS for this auth server
  tls:
    # Certificates for the server.
    certFile: /path/to/cert/file

    # Key file for the server.
    keyFile: /path/to/key/file

    # CA file for the server.
    # This is optional, but recommended if you are using a self-signed certificate.
    caFile: /path/to/ca/file

# Observability configuration for the auth platform.
observability:
  # The endpoint for the OpenTelemetry exporter.
  # Logs, Traces both are exported to this endpoint.
  otelExporterEndpoint: localhost:4317

  # The protocol to use, one of http/protobuf, grpc or stdout.
  # During development, you may use stdout, which will print the logs and traces to the console, which is messy.
  # Highly recommend to setup a signoz docker container for the same in development.
  otelExporterProtocol: grpc

  # The log level, logs at and above this level will be exported.
  # One of debug info warn error dpanic panic fatal.
  logLevel: info

# The configuration for different stores (storages) required by the auth platform.
stores:
  # The database to store the auth platform data.
  postgres:
    # The Data Source Name (DSN) for the PostgreSQL database.
    # Format: postgres://username:password@host:port/database_name
    #
    # For connection pooling arguments, take a look at:
    # https://pkg.go.dev/github.com/jackc/pgx/v5@v5.7.5/pgxpool#ParseConfig
    dsn: postgres://postgres:postgres@localhost:5433/auth_platform

  # The Redis store for caching, rate-limiting, flows, etc.
  redis:
    # The address of the Redis server.
    address: localhost:6379

    # The Redis database number to use.
    db: 0

    # The password for the Redis server. (Optional)
    password: nap-redis-password

  # The S3 store for storing files, images, etc.
  # Any s3 compatible store can be used, for more information about what operations
  # are used, take a look at:
  # https://docs.nbrglm.com/auth-platform/stores/s3/operations
  s3:
    # The endpoint of the S3 store. (ALWAYS REQUIRED)
    endpoint: s3.amazonaws.com

    # The access key for the S3 store.
    accessKeyID: YOUR_ACCESS_KEY_ID

    # The secret key for the S3 store.
    secretAccessKey: YOUR_SECRET_ACCESS_KEY

    # Bucket name for the S3 store isn't needed, as the bucket names are fixed.
    # If those buckets do not exists, they will be created automatically.
    # Access for objects therein is managed by the auth-platform.

    # The region of the S3 store.
    region: us-east-1

    # UseSSL indicates whether to use SSL for the S3 store.
    # Set this to true if you are using a secure (https) S3 endpoint.
    # Default is false.
    useSSL: false

# Security configuration for the auth platform.
security:
  # Enable or disable audit logs. (Default false)
  enableAuditLogs: false

  # The list of API Keys which are allowed to access the API endpoints.
  #
  # Requests without an API key, or with a key not specified here will be denied with 401.
  apiKeys:
    # The name of the API Key
    - name: "Production App Key"

      # Description of the key
      description: "This key is used by the production app to access the auth-platform."

      # The key itself. No restriction on the length, but keep it sensible please.
      # Recommended format: nap_[environment:oneof=live,test,dev,staging]_[random alphanumeric string]
      key: "nap_live_9z8y7x6w5v4u3t2s1r0q"

    # Can specify multiple keys too.
    - name: "Dev Key"
      description: "This key is used by the development app to access the auth-platform."
      key: "nap_dev_9z8y7x6w5v4u3t2s1r0q"

  # Cookie security settings.
  cookie:
    # The signing key file for the cookies.
    # This is used to sign the cookies to prevent tampering.
    signingKeyFile: /path/to/cookie-signing-key

  # CSRF security settings.
  csrf:
    # The secret file for CSRF protection.
    secretFile: /path/to/csrf-secret

    # The csrf token name in the form fields. (Default: nap-csrf-tk)
    tokenName: nap-csrf-tk

    # The csrf token header name. (Default X-CSRF-Token)
    # If you change this, you need to allow the header in CORS config.
    tokenHeader: X-CSRF-Token

  # Configuration for Rate Limiting.
  rateLimit:
    # Configure the rate limiting for UI endpoints.
    ui:
      # The maximum number of requests allowed to open (unauthenticated) endpoints like login, signup, verify-email, etc.
      # Format: "R-U", where R is number of requests and U is unit (s - per second, m - per minute, h - per hour, d - per day).
      openEndpointsRate: 10-m

      # The maximum number of requests allowed to authenticated endpoints.
      # Format: "R-U", where R is number of requests and U is unit (s - per second, m - per minute, h - per hour, d - per day).
      authenticatedEndpointsRate: 60-m

    # Configure the rate limiting for API endpoints.
    api:
      rate: 120-s

  # CORS settings for the auth platform.
  cors:
    # Allowed origins for CORS requests.
    # Note: Using "*" WILL NOT work.
    #
    # The following origins are allowed by default:
    #
    # In debug mode, you can set the public.debugBaseURL to allow any url.
    #
    # In production mode, this is allowed:
    # - https://{public.domain}
    # - https://{public.subdomain}.{public.domain}
    #
    # Any other domains, even other subdomains of {public.domain} will not be allowed by default.
    # Allowing a domain WOULD NOT allow all its subdomains.
    # You need to explicitly allow subdomains by specifying them here.
    # The following formats work:
    # allowedOrigins:
    #   - https://*.example.com
    #   - https://auth.example.com
    #   - https://example.com

    # Allowed methods for CORS requests.
    # By default this is the list of all allowed methods for CORS requests.
    # No methods can be subtracted, but you can add more methods to this list.
    allowedMethods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
      - PATCH
      - HEAD

    # By default, only the following headers are allowed.
    # - Content-Type
    # - Authorization
    # - X-Requested-With
    # - Accept
    # - Origin
    # - User-Agent
    # - X-NAP-Refresh-Token
    # - X-CSRF-Token
    # - X-NAP-API-Key
    #
    # You can add to the list by adding headers here.
    # allowedHeaders:
    #   - "X-Some-Header"

# JWT configuration for the auth platform.
jwt:
  # The private key file for signing the JWT tokens. (RS256 algorithm)
  privateKeyFile: /path/to/private.pem

  # The public key file for verifying the JWT tokens. (RS256 algorithm)
  publicKeyFile: /path/to/public.pem

  # Session token expiration time in seconds (default: 1hr, 3600).
  sessionTokenExpiration: 3600

  # Refresh token expiration time in seconds (default: 30d, 2592000).
  refreshTokenExpiration: 2592000

  # Audiences claim for the JWT tokens.
  #
  # NOTE: This is NOT for OIDC. This is for the session tokens! OIDC will be stored in the DB per tenant (when support is added).
  #
  # NOTE: Do not add the {public.subdomain}.{public.domain} and {public.domain} here
  # as they are automatically added to the audiences claim.
  # audiences:
  #   - https://some-other-app.example.com

# Branding configuration for the auth platform.
branding:
  # The name of the application.
  appName: NBRGLM Accounts

  # The name of the company.
  companyName: NBRGLM Developers Private Limited

  # The short name of the company.
  companyNameShort: NBRGLM

  # The support URL for the application.
  supportURL: https://support.nbrglm.com

  # The path to the logo file for the application.
  logoFile: /path/to/logo.png

  # The path to the logo file for the application in dark mode.
  logoDarkFile: /path/to/logo-dark.png

  # The path to favicon file for the application.
  faviconFile: /path/to/favicon.png
# If in case, you require to remove the nbrglm branding from the auth platform UI,
# you can set this to false.
# nbrglmBranding: true
